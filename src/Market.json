{
  "schema_version": "0.1.0",
  "metadata": {
    "name": "market",
    "version": "0.1.0",
    "authors": [
      "Muzikanto <schiriy_maxim@icloud.com>"
    ]
  },
  "body": {
    "functions": [
      {
        "name": "ft_on_transfer",
        "params": [
          {
            "name": "sender_id",
            "serialization_type": "json",
            "type_schema": {
              "$ref": "#/definitions/AccountId"
            }
          },
          {
            "name": "amount",
            "serialization_type": "json",
            "type_schema": {
              "$ref": "#/definitions/U128"
            }
          },
          {
            "name": "msg",
            "serialization_type": "json",
            "type_schema": {
              "type": "string"
            }
          }
        ],
        "result": {
          "serialization_type": "json",
          "type_schema": {
            "$ref": "#/definitions/PromiseOrValueU128"
          }
        }
      },
      {
        "name": "market_accept_offer",
        "params": [
          {
            "name": "nft_contract_id",
            "serialization_type": "json",
            "type_schema": {
              "$ref": "#/definitions/AccountId"
            }
          },
          {
            "name": "token_id",
            "serialization_type": "json",
            "type_schema": {
              "type": "string"
            }
          },
          {
            "name": "ft_token_id",
            "serialization_type": "json",
            "type_schema": {
              "$ref": "#/definitions/AccountId"
            }
          }
        ]
      },
      {
        "name": "market_add_bid",
        "is_private": true,
        "params": [
          {
            "name": "contract_and_token_id",
            "serialization_type": "json",
            "type_schema": {
              "type": "string"
            }
          },
          {
            "name": "amount",
            "serialization_type": "json",
            "type_schema": {
              "type": "integer",
              "format": "uint128",
              "minimum": 0
            }
          },
          {
            "name": "ft_token_id",
            "serialization_type": "json",
            "type_schema": {
              "$ref": "#/definitions/AccountId"
            }
          },
          {
            "name": "buyer_id",
            "serialization_type": "json",
            "type_schema": {
              "$ref": "#/definitions/AccountId"
            }
          },
          {
            "name": "sale",
            "serialization_type": "json",
            "type_schema": {
              "$ref": "#/definitions/Sale"
            }
          }
        ]
      },
      {
        "name": "market_add_ft_token",
        "doc": " only owner",
        "params": [
          {
            "name": "nft_contract_id",
            "serialization_type": "json",
            "type_schema": {
              "$ref": "#/definitions/AccountId"
            }
          }
        ],
        "result": {
          "serialization_type": "json",
          "type_schema": {
            "type": "boolean"
          }
        }
      },
      {
        "name": "market_offer",
        "is_payable": true,
        "params": [
          {
            "name": "nft_contract_id",
            "serialization_type": "json",
            "type_schema": {
              "$ref": "#/definitions/AccountId"
            }
          },
          {
            "name": "token_id",
            "serialization_type": "json",
            "type_schema": {
              "type": "string"
            }
          }
        ]
      },
      {
        "name": "market_process_purchase",
        "is_private": true,
        "params": [
          {
            "name": "nft_contract_id",
            "serialization_type": "json",
            "type_schema": {
              "$ref": "#/definitions/AccountId"
            }
          },
          {
            "name": "token_id",
            "serialization_type": "json",
            "type_schema": {
              "type": "string"
            }
          },
          {
            "name": "ft_token_id",
            "serialization_type": "json",
            "type_schema": {
              "$ref": "#/definitions/AccountId"
            }
          },
          {
            "name": "price",
            "serialization_type": "json",
            "type_schema": {
              "$ref": "#/definitions/U128"
            }
          },
          {
            "name": "buyer_id",
            "serialization_type": "json",
            "type_schema": {
              "$ref": "#/definitions/AccountId"
            }
          }
        ],
        "result": {
          "serialization_type": "json",
          "type_schema": {
            "$ref": "#/definitions/Promise"
          }
        }
      },
      {
        "name": "market_remove_sale",
        "is_payable": true,
        "params": [
          {
            "name": "nft_contract_id",
            "serialization_type": "json",
            "type_schema": {
              "$ref": "#/definitions/AccountId"
            }
          },
          {
            "name": "token_id",
            "serialization_type": "json",
            "type_schema": {
              "type": "string"
            }
          }
        ]
      },
      {
        "name": "market_resolve_purchase",
        "is_private": true,
        "params": [
          {
            "name": "ft_token_id",
            "serialization_type": "json",
            "type_schema": {
              "$ref": "#/definitions/AccountId"
            }
          },
          {
            "name": "buyer_id",
            "serialization_type": "json",
            "type_schema": {
              "$ref": "#/definitions/AccountId"
            }
          },
          {
            "name": "sale",
            "serialization_type": "json",
            "type_schema": {
              "$ref": "#/definitions/Sale"
            }
          },
          {
            "name": "price",
            "serialization_type": "json",
            "type_schema": {
              "$ref": "#/definitions/U128"
            }
          }
        ],
        "result": {
          "serialization_type": "json",
          "type_schema": {
            "$ref": "#/definitions/U128"
          }
        }
      },
      {
        "name": "market_sale",
        "is_view": true,
        "params": [
          {
            "name": "contract_id",
            "serialization_type": "json",
            "type_schema": {
              "$ref": "#/definitions/AccountId"
            }
          },
          {
            "name": "token_id",
            "serialization_type": "json",
            "type_schema": {
              "type": "string"
            }
          }
        ],
        "result": {
          "serialization_type": "json",
          "type_schema": {
            "anyOf": [
              {
                "$ref": "#/definitions/Sale"
              },
              {
                "type": "null"
              }
            ]
          }
        }
      },
      {
        "name": "market_sales_by_nft_contract_id",
        "is_view": true,
        "params": [
          {
            "name": "nft_contract_id",
            "serialization_type": "json",
            "type_schema": {
              "$ref": "#/definitions/AccountId"
            }
          },
          {
            "name": "from_index",
            "serialization_type": "json",
            "type_schema": {
              "$ref": "#/definitions/U64"
            }
          },
          {
            "name": "limit",
            "serialization_type": "json",
            "type_schema": {
              "type": "integer",
              "format": "uint64",
              "minimum": 0
            }
          }
        ],
        "result": {
          "serialization_type": "json",
          "type_schema": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/Sale"
            }
          }
        }
      },
      {
        "name": "market_sales_by_owner_id",
        "is_view": true,
        "params": [
          {
            "name": "account_id",
            "serialization_type": "json",
            "type_schema": {
              "$ref": "#/definitions/AccountId"
            }
          },
          {
            "name": "from_index",
            "serialization_type": "json",
            "type_schema": {
              "$ref": "#/definitions/U64"
            }
          },
          {
            "name": "limit",
            "serialization_type": "json",
            "type_schema": {
              "type": "integer",
              "format": "uint64",
              "minimum": 0
            }
          }
        ],
        "result": {
          "serialization_type": "json",
          "type_schema": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/Sale"
            }
          }
        }
      },
      {
        "name": "market_supply_by_nft_contract_id",
        "is_view": true,
        "params": [
          {
            "name": "nft_contract_id",
            "serialization_type": "json",
            "type_schema": {
              "$ref": "#/definitions/AccountId"
            }
          }
        ],
        "result": {
          "serialization_type": "json",
          "type_schema": {
            "$ref": "#/definitions/U64"
          }
        }
      },
      {
        "name": "market_supply_by_owner_id",
        "is_view": true,
        "params": [
          {
            "name": "account_id",
            "serialization_type": "json",
            "type_schema": {
              "$ref": "#/definitions/AccountId"
            }
          }
        ],
        "result": {
          "serialization_type": "json",
          "type_schema": {
            "$ref": "#/definitions/U64"
          }
        }
      },
      {
        "name": "market_supply_sales",
        "is_view": true,
        "result": {
          "serialization_type": "json",
          "type_schema": {
            "$ref": "#/definitions/U64"
          }
        }
      },
      {
        "name": "market_update_price",
        "is_payable": true,
        "params": [
          {
            "name": "nft_contract_id",
            "serialization_type": "json",
            "type_schema": {
              "$ref": "#/definitions/AccountId"
            }
          },
          {
            "name": "token_id",
            "serialization_type": "json",
            "type_schema": {
              "type": "string"
            }
          },
          {
            "name": "ft_token_id",
            "serialization_type": "json",
            "type_schema": {
              "$ref": "#/definitions/AccountId"
            }
          },
          {
            "name": "price",
            "serialization_type": "json",
            "type_schema": {
              "$ref": "#/definitions/U128"
            }
          }
        ]
      },
      {
        "name": "new",
        "is_init": true,
        "params": [
          {
            "name": "owner_id",
            "serialization_type": "json",
            "type_schema": {
              "$ref": "#/definitions/AccountId"
            }
          }
        ]
      },
      {
        "name": "new_with_default_meta",
        "is_init": true,
        "params": [
          {
            "name": "owner_id",
            "serialization_type": "json",
            "type_schema": {
              "$ref": "#/definitions/AccountId"
            }
          }
        ]
      },
      {
        "name": "nft_on_approve",
        "params": [
          {
            "name": "token_id",
            "serialization_type": "json",
            "type_schema": {
              "type": "string"
            }
          },
          {
            "name": "owner_id",
            "serialization_type": "json",
            "type_schema": {
              "$ref": "#/definitions/AccountId"
            }
          },
          {
            "name": "approval_id",
            "serialization_type": "json",
            "type_schema": {
              "type": "integer",
              "format": "uint64",
              "minimum": 0
            }
          },
          {
            "name": "msg",
            "serialization_type": "json",
            "type_schema": {
              "type": "string"
            }
          }
        ]
      },
      {
        "name": "supported_ft_token_ids",
        "doc": " views",
        "is_view": true,
        "result": {
          "serialization_type": "json",
          "type_schema": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/AccountId"
            }
          }
        }
      },
      {
        "name": "test",
        "is_view": true,
        "params": [
          {
            "name": "account_id",
            "serialization_type": "json",
            "type_schema": {
              "$ref": "#/definitions/AccountId"
            }
          }
        ],
        "result": {
          "serialization_type": "json",
          "type_schema": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      }
    ],
    "root_schema": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "String",
      "type": "string",
      "definitions": {
        "AccountId": {
          "description": "Account identifier. This is the human readable utf8 string which is used internally to index accounts on the network and their respective state.\n\nBecause these IDs have to be validated, they have to be converted from a string with [`FromStr`] or [`TryFrom`] a compatible type. To skip validation on initialization, [`AccountId::new_unchecked`] can be used.\n\n# Examples ``` use near_sdk::AccountId; use std::convert::{TryFrom, TryInto};\n\n// `FromStr` conversion let alice: AccountId = \"alice.near\".parse().unwrap(); assert!(\"invalid.\".parse::<AccountId>().is_err());\n\nlet alice_string = \"alice\".to_string();\n\n// From string with validation let alice = AccountId::try_from(alice_string.clone()).unwrap(); let alice: AccountId = alice_string.try_into().unwrap();\n\n// Initialize without validating let alice_unchecked = AccountId::new_unchecked(\"alice\".to_string()); assert_eq!(alice, alice_unchecked); ```\n\n[`FromStr`]: std::str::FromStr",
          "type": "string"
        },
        "Bid": {
          "type": "object",
          "required": [
            "owner_id",
            "price"
          ],
          "properties": {
            "owner_id": {
              "$ref": "#/definitions/AccountId"
            },
            "price": {
              "$ref": "#/definitions/U128"
            }
          }
        },
        "Promise": true,
        "PromiseOrValueU128": {
          "type": "integer",
          "format": "uint128",
          "minimum": 0
        },
        "Sale": {
          "type": "object",
          "required": [
            "approval_id",
            "bids",
            "created_at",
            "is_auction",
            "nft_contract_id",
            "owner_id",
            "sale_conditions",
            "token_id"
          ],
          "properties": {
            "approval_id": {
              "type": "integer",
              "format": "uint64",
              "minimum": 0
            },
            "bids": {
              "type": "object",
              "additionalProperties": {
                "type": "array",
                "items": {
                  "$ref": "#/definitions/Bid"
                }
              }
            },
            "created_at": {
              "type": "integer",
              "format": "uint64",
              "minimum": 0
            },
            "is_auction": {
              "type": "boolean"
            },
            "nft_contract_id": {
              "$ref": "#/definitions/AccountId"
            },
            "owner_id": {
              "$ref": "#/definitions/AccountId"
            },
            "sale_conditions": {
              "type": "object",
              "additionalProperties": {
                "$ref": "#/definitions/U128"
              }
            },
            "token_id": {
              "type": "string"
            }
          }
        },
        "U128": {
          "type": "integer",
          "format": "uint128",
          "minimum": 0
        },
        "U64": {
          "type": "integer",
          "format": "uint64",
          "minimum": 0
        }
      }
    }
  }
}